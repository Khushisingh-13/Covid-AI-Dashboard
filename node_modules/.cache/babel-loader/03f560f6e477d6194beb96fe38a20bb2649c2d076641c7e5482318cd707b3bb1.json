{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KULDEEP\\\\Desktop\\\\covid\\\\src\\\\context\\\\RoleContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/RoleContext.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleContext = /*#__PURE__*/createContext();\nexport const RoleProvider = ({\n  children\n}) => {\n  _s();\n  const [role, setRole] = useState(() => {\n    // Read initial role from localStorage if exists\n    return localStorage.getItem('role') || null;\n  });\n\n  // Sync role to localStorage whenever it changes\n  useEffect(() => {\n    if (role) {\n      localStorage.setItem('role', role);\n    } else {\n      localStorage.removeItem('role');\n    }\n  }, [role]);\n  return /*#__PURE__*/_jsxDEV(RoleContext.Provider, {\n    value: {\n      role,\n      setRole\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleProvider, \"Mta002qqJN0eeUSqAqkLEOYBwa0=\");\n_c = RoleProvider;\nexport const useRole = () => {\n  _s2();\n  return useContext(RoleContext);\n};\n_s2(useRole, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"RoleProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","RoleContext","RoleProvider","children","_s","role","setRole","localStorage","getItem","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRole","_s2","$RefreshReg$"],"sources":["C:/Users/KULDEEP/Desktop/covid/src/context/RoleContext.js"],"sourcesContent":["// src/context/RoleContext.jsx\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst RoleContext = createContext();\r\n\r\nexport const RoleProvider = ({ children }) => {\r\n  const [role, setRole] = useState(() => {\r\n    // Read initial role from localStorage if exists\r\n    return localStorage.getItem('role') || null;\r\n  });\r\n\r\n  // Sync role to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (role) {\r\n      localStorage.setItem('role', role);\r\n    } else {\r\n      localStorage.removeItem('role');\r\n    }\r\n  }, [role]);\r\n\r\n  return (\r\n    <RoleContext.Provider value={{ role, setRole }}>\r\n      {children}\r\n    </RoleContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRole = () => useContext(RoleContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACrC;IACA,OAAOU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI;EAC7C,CAAC,CAAC;;EAEF;EACAV,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAE;MACRE,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAAC;IACpC,CAAC,MAAM;MACLE,YAAY,CAACG,UAAU,CAAC,MAAM,CAAC;IACjC;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEP,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC5CA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CApBWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAsBzB,OAAO,MAAMgB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACK,WAAW,CAAC;AAAA;AAACkB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}