{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KULDEEP\\\\Desktop\\\\covid\\\\src\\\\components\\\\admin\\\\ChartSection.jsx\";\n// components/ChartSection.jsx\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = [{\n  date: 'Jul 1',\n  predicted: 120,\n  actual: 110\n}, {\n  date: 'Jul 2',\n  predicted: 130,\n  actual: 125\n}, {\n  date: 'Jul 3',\n  predicted: 140,\n  actual: 138\n}];\nconst ChartSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"style\", {\n    children: `\n      .card {\n        background: #ffffff;\n        padding: 5rem;\n        margin: 2rem;\n        border-radius: 16px;\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n        max-width: 700px;\n        transition: transform 0.3s ease, box-shadow 0.3s ease;\n      }\n\n      .card:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n      }\n\n      .card h3 {\n        font-size: 1.4rem;\n        margin-bottom: 1.5rem;\n        color: #333;\n        font-family: 'Segoe UI', sans-serif;\n      }\n\n      @media screen and (max-width: 768px) {\n        .card {\n          margin: 1rem;\n          padding: 1rem;\n        }\n      }\n    `\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCC8 Predicted vs Actual Cases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 600,\n      height: 300,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f0f0f0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"predicted\",\n        stroke: \"#8884d8\",\n        strokeWidth: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"actual\",\n        stroke: \"#82ca9d\",\n        strokeWidth: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c = ChartSection;\nexport default ChartSection;\nvar _c;\n$RefreshReg$(_c, \"ChartSection\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","Tooltip","Legend","CartesianGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","data","date","predicted","actual","ChartSection","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","dataKey","stroke","type","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/KULDEEP/Desktop/covid/src/components/admin/ChartSection.jsx"],"sourcesContent":["// components/ChartSection.jsx\r\nimport React from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  CartesianGrid,\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  { date: 'Jul 1', predicted: 120, actual: 110 },\r\n  { date: 'Jul 2', predicted: 130, actual: 125 },\r\n  { date: 'Jul 3', predicted: 140, actual: 138 },\r\n];\r\n\r\nconst ChartSection = () => (\r\n  <>\r\n    <style>{`\r\n      .card {\r\n        background: #ffffff;\r\n        padding: 5rem;\r\n        margin: 2rem;\r\n        border-radius: 16px;\r\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n        max-width: 700px;\r\n        transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n      }\r\n\r\n      .card:hover {\r\n        transform: translateY(-5px);\r\n        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\r\n      }\r\n\r\n      .card h3 {\r\n        font-size: 1.4rem;\r\n        margin-bottom: 1.5rem;\r\n        color: #333;\r\n        font-family: 'Segoe UI', sans-serif;\r\n      }\r\n\r\n      @media screen and (max-width: 768px) {\r\n        .card {\r\n          margin: 1rem;\r\n          padding: 1rem;\r\n        }\r\n      }\r\n    `}</style>\r\n\r\n    <div className=\"card\">\r\n      <h3>ðŸ“ˆ Predicted vs Actual Cases</h3>\r\n      <LineChart width={600} height={300} data={data}>\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <CartesianGrid stroke=\"#f0f0f0\" />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"predicted\" stroke=\"#8884d8\" strokeWidth={3} />\r\n        <Line type=\"monotone\" dataKey=\"actual\" stroke=\"#82ca9d\" strokeWidth={3} />\r\n      </LineChart>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default ChartSection;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,aAAa,QACR,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElB,MAAMC,IAAI,GAAG,CACX;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,EAC9C;EAAEF,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,EAC9C;EAAEF,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,CAC/C;AAED,MAAMC,YAAY,GAAGA,CAAA,kBACnBP,OAAA,CAAAE,SAAA;EAAAM,QAAA,gBACER,OAAA;IAAAQ,QAAA,EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC,eAEVZ,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAL,QAAA,gBACnBR,OAAA;MAAAQ,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCZ,OAAA,CAACR,SAAS;MAACsB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACZ,IAAI,EAAEA,IAAK;MAAAK,QAAA,gBAC7CR,OAAA,CAACN,KAAK;QAACsB,OAAO,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBZ,OAAA,CAACL,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTZ,OAAA,CAACF,aAAa;QAACmB,MAAM,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCZ,OAAA,CAACJ,OAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXZ,OAAA,CAACH,MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVZ,OAAA,CAACP,IAAI;QAACyB,IAAI,EAAC,UAAU;QAACF,OAAO,EAAC,WAAW;QAACC,MAAM,EAAC,SAAS;QAACE,WAAW,EAAE;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7EZ,OAAA,CAACP,IAAI;QAACyB,IAAI,EAAC,UAAU;QAACF,OAAO,EAAC,QAAQ;QAACC,MAAM,EAAC,SAAS;QAACE,WAAW,EAAE;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAAA,eACN,CACH;AAACQ,EAAA,GA9CIb,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}